# Ignacio Tamayo, TSP, 2016
# Version 1.3
# Date: August 2016

[database]

# SQLalchemy URL
# -- Compulsory value, no default --
url = mysql://vios:vIOS_DBPASS@10.0.0.11/vios

[openstack]

#
# From OpenStackconnection.py
#

## HTTP API Query timeout. In Seconds
#connection_timeout = 5
## OpenStack Ceilometer default Sampling Period. In Seconds
#ceilometer_period = 600

#Seconds to wait before polling the Glance Service to check if an Image is ready
glance_poll_timeout = 60
#Max times to poll the Glance Service to check if an Image is ready
glance_poll_retries = 15

#Seconds to wait before polling the Nova Service to check if an Server is ready
nova_poll_timeout = 15
#Max times to poll the Nova Service to check if an Server is ready
nova_poll_retries = 6

#
# From Optimizer.py
#

# Local directory used to temporarily store the VM Images, when cloning/migrating
local_tmp_dir = "/tmp"

[log]

#
# From vIOSLib
#

# If a log file was set, the log file is rotated every maxBytes bytes, and up to backupCount files are kept
logfile = /tmp/vIOS.log
maxBytes=9865
backupCount=5

[web]

#
# From WebAdmin.py
#

# TPC port where the HTTP Server will listen
# By default 5000
listen_port = 5555

# IP where the HTTP Server will listen. Use 0.0.0.0 for any.
# This is a 1 IP value only
# By default 127.0.0.1
listen_ip = 0.0.0.0

[DEFAULT]

#
# From Optimizer.py
#

# Parameters for the linear random creation of Demands
# Highest probability, more demands are generated.
# Float value in [0.0 ; 1.0]
demand_probability = 0.5

# Parameters for the linear random creation of Demands
# Demand amplitud in units of volume
# Int value > 0
demand_amplitude = 20


# Parameters for the periodical information gathering from OpenStacks
# Hours of samples to take from the Ceilometer Stats API. Meaning, HMAC will gather the min/avg/max values of the Ceilometer Meter of the samples of the last X hours
# This value is the same used in the command "cielometer statistics -m <meter> -p <period>"
# Int value > 0
sample_period_hours =12


#
# From OptimizerModels.py
#

# Parameters for the random Topologie Graph
## Number of Branches in the Random Tree Graph
## Integer value > 0
network_tree_branches = 3

# Parameters for the random Topologie Graph
# Maximum link capacity used when creating the Random Graph when updating the infrastructure
# Int value > 0
network_link_capacity = 500

#Parameters for the NCUPM Model for BW adjustment based on QoE 
#This is an exponential model based on the ratio x = BW_bitrate/BW_network
#As condition, alpha + beta*exp(-gamma) should be around [4.5 - 5]
#As condition, alpha should be around [2]
NCUPM_alpha = 2
NCUPM_beta = 6.98
NCUPM_gamma = 1.06



#
# From vIOSLib
#

debug = False
